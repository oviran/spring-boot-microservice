# Copyright 2024 oshadha_viran

---
# MySQL Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:8
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "pos"
          ports:
            - containerPort: 3306
              name: mysql

---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - name: mysql
      protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
# keycloak Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - image: quay.io/keycloak/keycloak:21.0.0
          name: keycloak
          env:
            - name: KEYCLOAK_USER
              value: "admin"
            - name: KEYCLOAK_PASSWORD
              value: "Admin@123"
            - name: DB_VENDOR
              value: "mysql"
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30

          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
spec:
  selector:
    app: keycloak
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - image: confluentinc/cp-zookeeper:7.5.0
          name: zookeeper
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
          ports:
            - containerPort: 2181
              name: zookeeper
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app: zookeeper
  ports:
    - name: zookeeper
      protocol: TCP
      port: 2181
      targetPort: 2181
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - image: confluentinc/cp-kafka:7.5.0
          name: kafka
          env:
            - name: PORT
              value: "9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
          ports:
            - containerPort: 9092
              name: kafka
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 30
            periodSeconds: 10

          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      protocol: TCP
      port: 9092
      targetPort: 9092
  type: ClusterIP

---
# Java Application Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
spec:
  selector:
    matchLabels:
      app: apigateway
  template:
    metadata:
      labels:
        app: apigateway
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: oshadha96/apigateway:latest
          ports:
            - containerPort: 8088
          env:
            - name: DISCOVERYSERVER_ADDR
              value: "discoveryserver:8761"
            - name: PORT
              value: "8088"
            - name: DISABLE_PROFILER
              value: "1"
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8088
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8088
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: apigateway
spec:
  type: ClusterIP
  selector:
    app: apigateway
  ports:
    - name: grpc
      port: 8088
      targetPort: 8088

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: oshadha96/order:latest
          ports:
            - containerPort: 8081
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 30
          env:
            - name: PORT
              value: "8081"
            - name: PRODUCT_ADDR
              value: "product:8086"
            - name: INVENTORY_ADDR
              value: "inventory:8085"
            - name: DISCOVERYSERVER_ADDR
              value: "discoveryserver:8761"
            - name: APIGATEWAY_ADDR
              value: "apigateway:8088"
            - name: KAFKA_ADDR
              value: "kafka:9092"
            - name: KEYCLOAK
              value: "keycloak:8080/realms/spring-boot-microservices-realm"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/orders?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: root
          resources:
            requests:
              cpu: 200m
              memory: 320Mi
            limits:
              cpu: 300m
              memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: order
spec:
  type: ClusterIP
  selector:
    app: order
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: oshadha96/product:latest
          ports:
            - name: grpc
              containerPort: 8086
          env:
            - name: DISCOVERYSERVER_ADDR
              value: "discoveryserver:8761"
            - name: KAFKA_ADDR
              value: "kafka:9092"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/products?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: root
            - name: PORT
              value: "8086"
            - name: DISABLE_PROFILER
              value: "1"
          readinessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 60
            periodSeconds: 30

          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: product
spec:
  type: ClusterIP
  selector:
    app: product
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: inventory
  template:
    metadata:
      labels:
        app: inventory
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: oshadha96/inventory:latest
          ports:
            - containerPort: 8085
          env:
            - name: DISCOVERYSERVER_ADDR
              value: "discoveryserver:8761"
            - name: KAFKA_ADDR
              value: "kafka:9092"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/inventory?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: root
            - name: PORT
              value: "8085"
            - name: DISABLE_PROFILER
              value: "1"
          readinessProbe:
            httpGet:
              path: /health
              port: 8085
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8085
            initialDelaySeconds: 60
            periodSeconds: 30

          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: inventory
spec:
  type: ClusterIP
  selector:
    app: inventory
  ports:
    - name: grpc
      port: 8085
      targetPort: 8085
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: discoveryserver
spec:
  selector:
    matchLabels:
      app: discoveryserver
  template:
    metadata:
      labels:
        app: discoveryserver
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: oshadha96/discoveryserver:latest
          ports:
            - containerPort: 8761
          env:
            - name: PORT
              value: "8761"
          resources:
            requests:
              cpu: 200m
              memory: 180Mi
            limits:
              cpu: 300m
              memory: 300Mi
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 20
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 30
            periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: discoveryserver
spec:
  type: ClusterIP
  selector:
    app: discoveryserver
  ports:
    - name: grpc
      port: 8761
      targetPort: 8761
